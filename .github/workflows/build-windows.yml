env:
  CHERE_INVOKING: 1
  MSYS2_PATH_TYPE: minimal
jobs:
  build-windows:
    defaults:
      run:
        shell: bash
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the JDK source
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Get MSYS2
      uses: ./.github/actions/get-msys2
    - continue-on-error: true
      id: bootjdk
      name: Get the BootJDK
      uses: ./.github/actions/get-bootjdk
      with:
        platform: windows-x64
    - continue-on-error: true
      id: jtreg
      name: Get JTReg
      uses: ./.github/actions/get-jtreg
    - continue-on-error: true
      id: gtest
      name: Get GTest
      uses: ./.github/actions/get-gtest
    - continue-on-error: true
      id: toolchain-check
      name: Check toolchain installed
      run: "set +e\n'/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/vc/auxiliary/build/vcvars64.bat'\
        \ -vcvars_ver=${{ inputs.msvc-toolset-version }}\nif [ $? -eq 0 ]; then\n\
        \  echo \"Toolchain is already installed\"\n  echo \"toolchain-installed=true\"\
        \ >> $GITHUB_OUTPUT\nelse\n  echo \"Toolchain is not yet installed\"\n  echo\
        \ \"toolchain-installed=false\" >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      if: steps.toolchain-check.outputs.toolchain-installed != 'true'
      name: Install toolchain and dependencies
      run: "# Run Visual Studio Installer\n'/c/Program Files (x86)/Microsoft Visual\
        \ Studio/Installer/vs_installer.exe' \\\n  modify --quiet --installPath 'C:\\\
        Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise' \\\n  --add\
        \ Microsoft.VisualStudio.Component.VC.${{ inputs.msvc-toolset-version }}.${{\
        \ inputs.msvc-toolset-architecture }}\n"
    - continue-on-error: true
      env:
        PATH: ''
      name: Configure
      run: 'bash configure --with-conf-name=${{ inputs.platform }} ${{ matrix.flags
        }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-boot-jdk=${{ steps.bootjdk.outputs.path
        }} --with-jtreg=${{ steps.jtreg.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path
        }} --with-msvc-toolset-version=${{ inputs.msvc-toolset-version }} --with-jmod-compress=zip-1
        ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || ( echo
        "Dumping config.log:" && cat config.log && exit 1)

        '
      shell: env /usr/bin/bash --login -eo pipefail {0}
    - continue-on-error: true
      id: build
      name: Build
      uses: ./.github/actions/do-build
      with:
        debug-suffix: ${{ matrix.suffix }}
        make-target: ${{ inputs.make-target }} ${{ inputs.make-arguments }}
        platform: ${{ inputs.platform }}
    - continue-on-error: true
      name: Upload bundles
      uses: ./.github/actions/upload-bundles
      with:
        debug-suffix: ${{ matrix.suffix }}
        platform: ${{ inputs.platform }}
    strategy:
      fail-fast: false
      matrix:
        debug-level: ${{ fromJSON(inputs.debug-levels) }}
        include:
        - debug-level: debug
          flags: --with-debug-level=fastdebug
          suffix: -debug
name: Build (windows)
on:
  repository_dispatch:
    types: trigger-ga___build-windows.yml
