jobs:
  build-macos:
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the JDK source
      uses: actions/checkout@v4
    - continue-on-error: true
      id: bootjdk
      name: Get the BootJDK
      uses: ./.github/actions/get-bootjdk
      with:
        platform: ${{ inputs.platform }}
    - continue-on-error: true
      id: jtreg
      name: Get JTReg
      uses: ./.github/actions/get-jtreg
    - continue-on-error: true
      id: gtest
      name: Get GTest
      uses: ./.github/actions/get-gtest
    - continue-on-error: true
      name: Install toolchain and dependencies
      run: '# Run Homebrew installation and xcode-select

        brew install autoconf make

        sudo xcode-select --switch /Applications/Xcode_${{ inputs.xcode-toolset-version
        }}.app/Contents/Developer

        # This will make GNU make available as ''make'' and not only as ''gmake''

        echo ''/usr/local/opt/make/libexec/gnubin'' >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Configure
      run: 'bash configure --with-conf-name=${{ inputs.platform }} ${{ matrix.flags
        }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-boot-jdk=${{ steps.bootjdk.outputs.path
        }} --with-jtreg=${{ steps.jtreg.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path
        }} --with-zlib=system --with-jmod-compress=zip-1 ${{ inputs.extra-conf-options
        }} ${{ inputs.configure-arguments }} || ( echo "Dumping config.log:" && cat
        config.log && exit 1)

        '
    - continue-on-error: true
      id: build
      name: Build
      uses: ./.github/actions/do-build
      with:
        debug-suffix: ${{ matrix.suffix }}
        make-target: ${{ inputs.make-target }} ${{ inputs.make-arguments }}
        platform: ${{ inputs.platform }}
    - continue-on-error: true
      name: Upload bundles
      uses: ./.github/actions/upload-bundles
      with:
        debug-suffix: ${{ matrix.suffix }}
        platform: ${{ inputs.platform }}
    strategy:
      fail-fast: false
      matrix:
        debug-level: ${{ fromJSON(inputs.debug-levels) }}
        include:
        - debug-level: debug
          flags: --with-debug-level=fastdebug
          suffix: -debug
name: Build (macos)
on:
  repository_dispatch:
    types: trigger-ga___build-macos.yml
