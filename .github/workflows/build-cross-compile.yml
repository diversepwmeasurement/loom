jobs:
  build-cross-compile:
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the JDK source
      uses: actions/checkout@v4
    - continue-on-error: true
      id: bootjdk
      name: Get the BootJDK
      uses: ./.github/actions/get-bootjdk
      with:
        platform: linux-x64
    - continue-on-error: true
      id: gtest
      name: Get GTest
      uses: ./.github/actions/get-gtest
    - continue-on-error: true
      name: Install toolchain and dependencies
      run: "# Install dependencies using apt-get\nsudo apt-get update\nsudo apt-get\
        \ install --only-upgrade apt\nsudo apt-get install \\\n    gcc-${{ inputs.gcc-major-version\
        \ }} \\\n    g++-${{ inputs.gcc-major-version }} \\\n    gcc-${{ inputs.gcc-major-version\
        \ }}-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-abi}} \\\n    g++-${{\
        \ inputs.gcc-major-version }}-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-abi}}\
        \ \\\n    libxrandr-dev libxtst-dev libcups2-dev libasound2-dev\nsudo update-alternatives\
        \ --install /usr/bin/gcc gcc /usr/bin/gcc-${{ inputs.gcc-major-version }}\
        \ 100 --slave /usr/bin/g++ g++ /usr/bin/g++-${{ inputs.gcc-major-version }}\n"
    - continue-on-error: true
      id: get-cached-sysroot
      name: Check cache for sysroot
      uses: actions/cache@v4
      with:
        key: sysroot-${{ matrix.debian-arch }}-${{ hashFiles('./.github/workflows/build-cross-compile.yml')
          }}
        path: sysroot
    - continue-on-error: true
      if: steps.get-cached-sysroot.outputs.cache-hit != 'true'
      name: Install sysroot dependencies
      run: sudo apt-get install debootstrap qemu-user-static
    - continue-on-error: true
      id: create-sysroot
      if: steps.get-cached-sysroot.outputs.cache-hit != 'true'
      name: Create sysroot
      run: 'sudo debootstrap --arch=${{ matrix.debian-arch }} --verbose --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype-dev,libpng-dev
        --resolve-deps --variant=minbase ${{ matrix.debian-version }} sysroot ${{
        matrix.debian-repository }}

        '
    - continue-on-error: true
      if: steps.create-sysroot.outcome == 'success' && steps.get-cached-sysroot.outputs.cache-hit
        != 'true'
      name: Prepare sysroot
      run: '# Prepare sysroot and remove unused files to minimize cache

        sudo chroot sysroot symlinks -cr .

        sudo chown ${USER} -R sysroot

        rm -rf sysroot/{dev,proc,run,sys,var}

        rm -rf sysroot/usr/{sbin,bin,share}

        rm -rf sysroot/usr/lib/{apt,gcc,udev,systemd}

        rm -rf sysroot/usr/libexec/gcc

        '
    - continue-on-error: true
      if: steps.create-sysroot.outcome != 'success' && steps.get-cached-sysroot.outputs.cache-hit
        != 'true'
      name: Remove broken sysroot
      run: 'sudo rm -rf sysroot/

        '
    - continue-on-error: true
      if: steps.create-sysroot.outcome == 'success' || steps.get-cached-sysroot.outputs.cache-hit
        == 'true'
      name: Configure
      run: 'bash configure --with-conf-name=linux-${{ matrix.target-cpu }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA}
        --with-boot-jdk=${{ steps.bootjdk.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path
        }} --with-zlib=system --enable-debug --disable-precompiled-headers --openjdk-target=${{
        matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-abi}} --with-sysroot=sysroot --with-jmod-compress=zip-1
        CC=${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-abi}}-gcc-${{ inputs.gcc-major-version
        }} CXX=${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-abi}}-g++-${{ inputs.gcc-major-version
        }} ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || (
        echo "Dumping config.log:" && cat config.log && exit 1)

        '
    - continue-on-error: true
      id: build
      if: steps.create-sysroot.outcome == 'success' || steps.get-cached-sysroot.outputs.cache-hit
        == 'true'
      name: Build
      uses: ./.github/actions/do-build
      with:
        make-target: hotspot ${{ inputs.make-arguments }}
        platform: linux-${{ matrix.target-cpu }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - debian-arch: arm64
          debian-repository: https://httpredir.debian.org/debian/
          debian-version: bullseye
          gnu-arch: aarch64
          target-cpu: aarch64
          tolerate-sysroot-errors: false
        - debian-arch: armhf
          debian-repository: https://httpredir.debian.org/debian/
          debian-version: bullseye
          gnu-abi: eabihf
          gnu-arch: arm
          target-cpu: arm
          tolerate-sysroot-errors: false
        - debian-arch: s390x
          debian-repository: https://httpredir.debian.org/debian/
          debian-version: bullseye
          gnu-arch: s390x
          target-cpu: s390x
          tolerate-sysroot-errors: false
        - debian-arch: ppc64el
          debian-repository: https://httpredir.debian.org/debian/
          debian-version: bullseye
          gnu-arch: powerpc64le
          target-cpu: ppc64le
          tolerate-sysroot-errors: false
        - debian-arch: riscv64
          debian-repository: https://httpredir.debian.org/debian/
          debian-version: sid
          gnu-arch: riscv64
          target-cpu: riscv64
          tolerate-sysroot-errors: true
        target-cpu:
        - aarch64
        - arm
        - s390x
        - ppc64le
        - riscv64
name: Build (cross-compile)
on:
  repository_dispatch:
    types: trigger-ga___build-cross-compile.yml
