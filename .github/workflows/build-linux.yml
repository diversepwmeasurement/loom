jobs:
  build-linux:
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the JDK source
      uses: actions/checkout@v4
    - continue-on-error: true
      id: bootjdk
      name: Get the BootJDK
      uses: ./.github/actions/get-bootjdk
      with:
        platform: linux-x64
    - continue-on-error: true
      id: jtreg
      name: Get JTReg
      uses: ./.github/actions/get-jtreg
    - continue-on-error: true
      id: gtest
      name: Get GTest
      uses: ./.github/actions/get-gtest
    - continue-on-error: true
      id: arch
      name: Set architecture
      run: "# Set a proper suffix for packages if using a different architecture\n\
        if [[ '${{ inputs.apt-architecture }}' != '' ]]; then\n  echo 'suffix=:${{\
        \ inputs.apt-architecture }}' >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      name: Install toolchain and dependencies
      run: "# Install dependencies using apt-get\nif [[ '${{ inputs.apt-architecture\
        \ }}' != '' ]]; then\n  sudo dpkg --add-architecture ${{ inputs.apt-architecture\
        \ }}\nfi\nsudo apt-get update\nsudo apt-get install --only-upgrade apt\nsudo\
        \ apt-get install gcc-${{ inputs.gcc-major-version }}${{ inputs.gcc-package-suffix\
        \ }} g++-${{ inputs.gcc-major-version }}${{ inputs.gcc-package-suffix }} libxrandr-dev${{\
        \ steps.arch.outputs.suffix }} libxtst-dev${{ steps.arch.outputs.suffix }}\
        \ libcups2-dev${{ steps.arch.outputs.suffix }} libasound2-dev${{ steps.arch.outputs.suffix\
        \ }} ${{ inputs.apt-extra-packages }}\nsudo update-alternatives --install\
        \ /usr/bin/gcc gcc /usr/bin/gcc-${{ inputs.gcc-major-version }} 100 --slave\
        \ /usr/bin/g++ g++ /usr/bin/g++-${{ inputs.gcc-major-version }}\n"
    - continue-on-error: true
      name: Configure
      run: 'bash configure --with-conf-name=${{ inputs.platform }} ${{ matrix.flags
        }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-boot-jdk=${{ steps.bootjdk.outputs.path
        }} --with-jtreg=${{ steps.jtreg.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path
        }} --with-zlib=system --with-jmod-compress=zip-1 ${{ inputs.extra-conf-options
        }} ${{ inputs.configure-arguments }} || ( echo "Dumping config.log:" && cat
        config.log && exit 1)

        '
    - continue-on-error: true
      id: build
      name: Build
      uses: ./.github/actions/do-build
      with:
        debug-suffix: ${{ matrix.suffix }}
        make-target: ${{ inputs.make-target }} ${{ inputs.make-arguments }}
        platform: ${{ inputs.platform }}
    - continue-on-error: true
      name: Upload bundles
      uses: ./.github/actions/upload-bundles
      with:
        debug-suffix: ${{ matrix.suffix }}
        platform: ${{ inputs.platform }}
    strategy:
      fail-fast: false
      matrix:
        debug-level: ${{ fromJSON(inputs.debug-levels) }}
        include:
        - debug-level: debug
          flags: --with-debug-level=fastdebug
          suffix: -debug
name: Build (linux)
on:
  repository_dispatch:
    types: trigger-ga___build-linux.yml
